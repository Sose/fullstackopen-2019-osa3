{"version":3,"sources":["services/persons.js","index.js"],"names":["baseUrl","services_persons","axios","get","newObject","post","id","put","concat","delete","Notification","_ref","notification","message","type","react_default","a","createElement","className","console","log","Person","_ref2","person","name","number","FilteredPersons","_ref3","persons","filter","onDeleteClick","personsToShow","p","toLowerCase","includes","map","key","src_Person","onClick","InputForm","_ref4","handleFilterChange","value","onChange","PersonForm","_ref5","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","ReactDOM","render","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setFilter","_useState5","_useState6","setNewName","_useState7","_useState8","setNewNumber","_useState9","_useState10","setNotification","useEffect","personService","then","res","data","showNotification","length","arguments","undefined","setTimeout","src_Notification","src_InputForm","e","target","src_PersonForm","preventDefault","newPerson","found","find","window","confirm","newPersons","toConsumableArray","_res$data","index","indexOf","catch","error","_res$data2","push","err","errorMsg","response","src_FilteredPersons","document","getElementById"],"mappings":"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","file":"static/js/main.74f6cfe3.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll, \n  create,\n  update,\n  remove\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport personService from './services/persons';\n\nconst Notification = ({ notification }) => {\n  const { message, type } = notification;\n\n  if (message === null) {\n    return null;\n  }\n  if (type === 'notification') {\n    return <div className=\"notification\">{message}</div>;\n  } else if (type === 'error') {\n    return <div className=\"error\">{message}</div>;\n  } else {\n    console.log('Notification: wrong type', type, 'message was', message);\n    return null;\n  }\n};\n\nconst Person = ({ person }) => (\n  <div>\n    {person.name} {person.number}\n  </div>\n);\n\nconst FilteredPersons = ({ persons, filter, onDeleteClick }) => {\n  const personsToShow = persons.filter(p =>\n    p.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      {personsToShow.map(p => (\n        <div key={p.id}>\n          <Person person={p} />\n          <button onClick={onDeleteClick(p.id)}>poista</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst InputForm = ({ filter, handleFilterChange }) => (\n  <p>\n    Rajaa näytettäviä\n    <input value={filter} onChange={handleFilterChange} />\n  </p>\n);\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange,\n}) => (\n  <form onSubmit={addPerson}>\n    <div>\n      nimi: <input value={newName} onChange={handleNameChange} />\n    </div>\n    <div>\n      numero: <input value={newNumber} onChange={handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">lisää</button>\n    </div>\n  </form>\n);\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [notification, setNotification] = useState({\n    message: null,\n    type: null,\n  });\n\n  useEffect(() => {\n    personService.getAll().then(res => {\n      console.log('promise fulfilled', res);\n      setPersons(res.data);\n    });\n  }, []);\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilterChange = e => {\n    setFilter(e.target.value);\n  };\n\n  const showNotification = (notification, length = 3000) => {\n    setNotification(notification)\n    setTimeout(() => {\n      setNotification({ message: null, type: null })\n    }, length)\n  }\n\n  const onDeleteClick = id => () => {\n    console.log('deleteClick', id);\n    const { name } = persons.find(p => p.id === id);\n    const confirmation = window.confirm(`Poistetaanko ${name}?`);\n\n    if (confirmation) {\n      personService.remove(id).then(res => {\n        let newPersons = [...persons];\n        newPersons = newPersons.filter(p => p.name !== name);\n        setPersons(newPersons);\n        showNotification({\n          message: `Poistettiin ${name}`,\n          type: 'notification'\n        }, 3000);\n      });\n    }\n  };\n\n  const addPerson = e => {\n    e.preventDefault();\n\n    // if there's no name given, abort\n    if (newName === '') return;\n\n    const newPerson = { name: newName, number: newNumber };\n\n    const found = persons.find(person => person.name === newName);\n    if (found) {\n      // update existing person\n      const confirmation = window.confirm(\n        `${found.name} on jo luettelossa, korvataanko numero uudella?`\n      );\n      if (confirmation) {\n        personService.update(found.id, newPerson).then(res => {\n          console.log('update res', res);\n          let newPersons = [...persons];\n          const { name, number, id } = res.data;\n          const index = newPersons.indexOf(found);\n          newPersons[index] = { name, number, id };\n          setPersons(newPersons);\n          setNewName('');\n          setNewNumber('');\n          showNotification({\n            message: `Päivitettiin ${name}, uusi numero on ${number}`,\n            type: 'notification'\n          }, 3000)\n        }).catch(error => {\n          // the person to update has been deleted already\n          showNotification({\n            message: `Henkilö ${found.name} oli jo poistettu`,\n            type: 'error'\n          }, 3000)\n          let newPersons = [...persons];\n          newPersons = newPersons.filter(p => p.name !== found.name);\n          setPersons(newPersons);\n        })\n      }\n    } else {\n      // add a new person\n      personService.create(newPerson).then(res => {\n        let newPersons = [...persons];\n        const { name, number, id } = res.data;\n        newPersons.push({ name, number, id });\n        setPersons(newPersons);\n        setNewName('');\n        setNewNumber('');\n        showNotification({\n          message: `Lisättiin ${name} numerolla ${number}`,\n          type: 'notification'\n        }, 3000);\n      }).catch(err => {\n        const errorMsg = err.response.data.error;\n        showNotification({ message: errorMsg, type: 'error'}, 5000);\n      })\n    }\n  };\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <Notification notification={notification} />\n      <InputForm filter={filter} handleFilterChange={handleFilterChange} />\n      <h3>Lisää uusi</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numerot</h3>\n      <FilteredPersons\n        persons={persons}\n        filter={filter}\n        onDeleteClick={onDeleteClick}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}